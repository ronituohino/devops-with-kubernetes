name: Release application

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  BRANCH: ${{ github.ref_name }}
  SOPS_AGE_KEY_FILE: ./key
  TODO_API_PATH: ../services/todo-api
  TODO_APP_PATH: ../services/todo-app
  GENERATE_TODO_PATH: ../jobs/generate-todo
  PG_BACKUP_PATH: ../jobs/pg-backup

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '#skip') }}
    defaults:
      run:
        working-directory: ./part3/3.08/kube

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Use gcloud CLI
        run: gcloud info
      - run: gcloud --quiet auth configure-docker

      - name: Get GKE credentials
        uses: "google-github-actions/get-gke-credentials@v2"
        with:
          cluster_name: "${{ env.GKE_CLUSTER }}"
          project_id: "${{ env.PROJECT_ID }}"
          location: "${{ env.GKE_ZONE }}"

      - name: Build images
        run: |
          docker build -t "gcr.io/$PROJECT_ID/todo-api:$BRANCH-$GITHUB_SHA" "$TODO_API_PATH"
          docker build -t "gcr.io/$PROJECT_ID/todo-app:$BRANCH-$GITHUB_SHA" "$TODO_APP_PATH"
          docker build -t "gcr.io/$PROJECT_ID/generate-todo:$BRANCH-$GITHUB_SHA" "$GENERATE_TODO_PATH"
          docker build -t "gcr.io/$PROJECT_ID/pg-backup:$BRANCH-$GITHUB_SHA" "$PG_BACKUP_PATH"

      - name: Publish images
        run: |
          docker push "gcr.io/$PROJECT_ID/todo-api:$BRANCH-$GITHUB_SHA"
          docker push "gcr.io/$PROJECT_ID/todo-app:$BRANCH-$GITHUB_SHA"
          docker push "gcr.io/$PROJECT_ID/generate-todo:$BRANCH-$GITHUB_SHA"
          docker push "gcr.io/$PROJECT_ID/pg-backup:$BRANCH-$GITHUB_SHA"

      - name: Install sops
        uses: mdgreenwald/mozilla-sops-action@v1.6.0

      - name: Decrypt secrets
        run: |
          echo "${{ secrets.SOPS_KEY }}" > key
          sops --decrypt ./secrets/secret.enc.yaml > ./secrets/secret.yaml

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2.1.0

      - name: Deploy
        run: |-
          if [[ $BRANCH == 'main' ]]
          then 
            kubectl config set-context --current --namespace=default
            kustomize edit set namespace default
          else
            kubectl create namespace  || true
            kubectl config set-context --current --namespace=$BRANCH
            kustomize edit set namespace $BRANCH
          fi
          kustomize edit set image TODO_API/IMAGE=gcr.io/$PROJECT_ID/todo-api:$BRANCH-$GITHUB_SHA
          kustomize edit set image TODO_APP/IMAGE=gcr.io/$PROJECT_ID/todo-app:$BRANCH-$GITHUB_SHA
          kustomize edit set image GENERATE_TODO/IMAGE=gcr.io/$PROJECT_ID/generate-todo:$BRANCH-$GITHUB_SHA
          kustomize edit set image PG_BACKUP/IMAGE=gcr.io/$PROJECT_ID/pg-backup:$BRANCH-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment -n project
          kubectl get services -o wide
